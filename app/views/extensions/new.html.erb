<%= provide(:title, "Add an Extension") %>

<div class="page resource extension_show" data-equalizer>
  <div class="main" data-equalizer-watch>
    <h1 class="heading">Add an Extension</h1>

    <%= form_for @extension, html: { "data-abide" => true } do |f| %>
      <%= render "application/form_errors", record: @extension %>

      <fieldset id="" class="">
        <legend>Use one of your GitHub repositories</legend>

        <div id="extensions-selector" class="name-field">
          <p id="loading-extensions"><%= image_tag "spinner.gif" %> Loading your repositories...</p>
          <p id="loading-extensions-failed" style="display: none;">Loading your repositories failed...</p>

          <% if false %>
          <% if @repo_names %>
            <%= f.select :github_url_short, @repo_names.map { |r| r[:full_name] }, { include_blank: "Select a Repository" }, required: true, id: "extension-url-short-field", data: { repos: @repo_names } %>
          <% else %>
            <p id="loading-extensions"><%= image_tag "spinner.gif" %> Loading your repositories...</p>
            <p id="loading-extensions-failed" style="display: none;">Loading your repositories failed...</p>
          <% end %>
          <% end %>

        </div>

        <%= f.hidden_field :github_url, id: "extension-url-field" %>

        <div class="description-field">
          <%= f.text_field :name, placeholder: "Name", title: "Name", required: true, id: "extension-name-field" %>
          <small class="error">Name is required.</small>
          <p class="hint-block">Please use title case for the name, e.g. My Gift to the Community.</p>
        </div>
        <div class="description-field">
          <%= f.text_field :description, placeholder: "Description", title: "Description", required: true, id: "extension-desc-field" %>
          <small class="error">Description is required.</small>
        </div>
        <div class="tag_tokens-field">
          <%= f.text_field :tag_tokens, placeholder: "Tags", title: "Tags", class: "tokenfield", data: { autofill: Tag::DEFAULT_TAGS } %>
        </div>

        <% if false # remove for Sensu %>
          <h2>Compatible ManageIQ Versions</h2>
          <div class="compatible_platforms-field">
            <% SupportedPlatform.pluck(:name, :id).each do |name, id| %>
              <div>
                <label><%= f.check_box :compatible_platforms, { multiple: true }, id.to_s, nil %> <%= name %></label>
              </div>
            <% end %>
          </div>
        <% end %>
      </fieldset>

      <%= f.submit "Add Extension", class: "button primary radius" %>
    <% end %>
  </div>

  <div class="sidebar" data-equalizer-watch>
    <h3>Adding an Extension</h3>
    <p class="no-left-margin">To add an extension, the extensions source files must be hosted in a public <a target="_blank" href="http://www.github.com">GitHub</a> repository on which you have access rights. The Asset Index will access that repository, and pull relevant information about your extension.</p>
    <p class="no-left-margin">The Asset Index will use the README file in the root of your GitHub repository as the description of your extension. For best results, please make sure this file is formatted using <a href="https://help.github.com/articles/github-flavored-markdown/" target="_blank">GitHub Flavored Markdown</a>, and that it contains a description of the contents of the repository, and any installation instructions.</p>
    <p class="no-left-margin">Github Releases tagged on your repository will be added as new versions of the extension in the Asset Index. We will use the Github release number for the version number of the extension.</p>
    <p class="no-left-margin">The Asset Index will do it's best to stay in sync with your Github repository. When new commits are pushed to your master branch, the Asset Index will be updated with those new commits. When new releases are added through Github, a new version of the extension will be created.</p>
  </div>
</div>

<% content_for :script do %>

  <script>

    var retries = 0;
    var repos = [];

    var getExtensionsForUser = () => {
      $.ajax({
        url: '<%= accessible_repos_users_path %>',
        method: 'GET',
        dataType: 'script'
      });
    }

    var retryGetExtension = () => {
      if (retries < 5) {
        setTimeout(getExtensionsForUser, 3000);
      } else {
        $("#loading-extensions").remove();
        $("#loading-extensions-failed").show();
        clearTimeout(getExtensionsForUser);
      }
      retries += 1
    }

    var updateNameAndDescription = () => {
      var urlField = $("#extension-url-short-field");
      var repos = urlField.data("repos");
      var current = urlField.val();

      var repo = null;

      for (var i = 0; i < repos.length; i++) {
        if (repos[i].full_name == current) {
          repo = repos[i];
          break;
        }
      }

      if (repo) {
        $("#extension-url-field").val(repo.full_name);
        $("#extension-name-field").val(repo.name);
        $("#extension-desc-field").val(repo.description);
      }
    }

    $(document).ajaxComplete( () => {
      $("#extension-url-short-field").change( () => {
        updateNameAndDescription();
      });
    });

    getExtensionsForUser();
  
  </script>

<% end %>
